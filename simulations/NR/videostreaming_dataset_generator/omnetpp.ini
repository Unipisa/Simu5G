[General]
sim-time-limit = 900s
repeat = 10
seed-set = ${repetition}

output-scalar-file-append = false
**.routingRecorder.enabled = false

############### Statistics ##################
**.rtVideoStreaming*.vector-recording = true
**.avgServedBlocksUl*.vector-recording = true
**.averageCqiUl*.vector-recording = true
**.rcvdSinrUl*.vector-recording = true
**.measuredSinrUl*.vector-recording = true
**.servingCell*.vector-recording = true

**.scalar-recording = false
**.vector-recording = false

output-scalar-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.vec

################ Floorplan #####################
**.mobility.constraintAreaMaxX = 2000m
**.mobility.constraintAreaMaxY = 2000m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 0m
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false


############### PHY-layer configuration ##################
**.ueTxPower = 26dBm
**.eNodeBTxPower = 40dBm
**.targetBler = 0.01
**.blerShift = 5
**.fbPeriod = 1000tti
**.uplink_interference = true
**.bgCell_interference = true

############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")

############### CA configuration ################
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].carrierFrequency = 2GHz
*.carrierAggregation.componentCarrier[0].numBands = 100
*.bgCell[*].bgScheduler.numBands = 100
*.bgCell[*].bgScheduler.isNr = true


############### Handover #################
**.enableHandover = true
**.dynamicCellAssociation = true  # at initialize the ue connects to the best cell (based on power)
**.sctp.nagleEnabled = false
**.sctp.enableHeartbeats = false


############### MEC configuration #################
*.mecOrchestrator.mecHostList = "mecHost"

# --- MEC Host Side --- #
*.mecHost.mecPlatformManager.mecOrchestrator = "mecOrchestrator"
*.mecHost.virtualisationInfrastructure.ipv4.forwarding = true

# resources available
*.mecHost.maxMECApps = 100												#max ME Apps to instantiate
*.mecHost.maxRam = 32GB													#max KBytes of Ram Space
*.mecHost.maxDisk = 100TB												#max KBytes of Ram Space
*.mecHost.maxCpuSpeed = 400000											#max percentage of CPU
*.mecHost.eNBList = "gnb1, gnb2, gnb3"

# MEC Host connected
**.gnb*.mecHost = "mecHost"
# ----------------------------------------------------------------------------- #




# Config UrbanNetwork
#
[Config UrbanNetwork]
network = simu5g.simulations.NR.videostreaming_dataset_generator.UrbanNetwork

############### gNodeB position #################
*.gnb1.mobility.initialX = 500m
*.gnb1.mobility.initialY = 1500m
*.gnb2.mobility.initialX = 1000m
*.gnb2.mobility.initialY = 1500m
*.gnb3.mobility.initialX = 1500m
*.gnb3.mobility.initialY = 1500m

############### X2 configuration #################
*.gnb*.numX2Apps = 2                                       # one x2App per peering node
*.gnb*.x2App[*].server.localPort = 5000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
*.gnb1.x2App[0].client.connectAddress = "gnb2%x2ppp0"
*.gnb1.x2App[1].client.connectAddress = "gnb3%x2ppp0"
*.gnb2.x2App[0].client.connectAddress = "gnb1%x2ppp0"
*.gnb2.x2App[1].client.connectAddress = "gnb3%x2ppp1"
*.gnb3.x2App[0].client.connectAddress = "gnb1%x2ppp1"
*.gnb3.x2App[1].client.connectAddress = "gnb2%x2ppp1"


############### background gNBs position ###################
*.numBgCells = 8

*.bgCell[0].mobility.initialX = 250m
*.bgCell[0].mobility.initialY = 1250m
*.bgCell[1].mobility.initialX = 750m
*.bgCell[1].mobility.initialY = 1250m
*.bgCell[2].mobility.initialX = 1250m
*.bgCell[2].mobility.initialY = 1250m
*.bgCell[3].mobility.initialX = 1750m
*.bgCell[3].mobility.initialY = 1250m

*.bgCell[4].mobility.initialX = 250m
*.bgCell[4].mobility.initialY = 1750m
*.bgCell[5].mobility.initialX = 750m
*.bgCell[5].mobility.initialY = 1750m
*.bgCell[6].mobility.initialX = 1250m
*.bgCell[6].mobility.initialY = 1750m
*.bgCell[7].mobility.initialX = 1750m
*.bgCell[7].mobility.initialY = 1750m



############# Background users position #############
*.gnb1.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialX = uniform(250m,750m)
*.gnb1.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialY = uniform(1000m,2000m)

*.gnb2.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialX = uniform(750m,1250m)
*.gnb2.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialY = uniform(1000m,2000m)

*.gnb3.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialX = uniform(1250m,1750m)
*.gnb3.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialY = uniform(1000m,2000m)

# position of background UEs in the background cells
*.bgCell[*].bgTrafficGenerator.bgUE[*].mobility.constraintAreaMinX = 0m
*.bgCell[*].bgTrafficGenerator.bgUE[*].mobility.constraintAreaMaxX = 2000m
*.bgCell[*].bgTrafficGenerator.bgUE[*].mobility.constraintAreaMinY = 1000m
*.bgCell[*].bgTrafficGenerator.bgUE[*].mobility.constraintAreaMaxY = 2000m

*.bgCell[0].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(0m,500m)
*.bgCell[0].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(1000m,1500m)
*.bgCell[1].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(500m,1000m)
*.bgCell[1].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(1000m,1500m)
*.bgCell[2].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(1000m,1500m)
*.bgCell[2].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(1000m,1500m)
*.bgCell[3].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(1500m,2000m)
*.bgCell[3].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(1000m,1500m)

*.bgCell[4].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(0m,500m)
*.bgCell[4].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(1500m,2000m)
*.bgCell[5].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(500m,1000m)
*.bgCell[5].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(1500m,2000m)
*.bgCell[6].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(1000m,1500m)
*.bgCell[6].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(1500m,2000m)
*.bgCell[7].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(1500m,2000m)
*.bgCell[7].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(1500m,2000m)


############## UE configuration ##################
*.numUe = ${ue=5}

# connect the UE's NIC to the corresponding serving gNB
*.ue[*].macCellId = 0
*.ue[*].masterId = 0
*.ue[*].nrMacCellId = 1
*.ue[*].nrMasterId = 1


############## UE positions ##################
*.ue[*].mobility.typename = "TrafficLightMobility"
*.ue[*].mobility.trafficLightsList = "tl1,tl2,tl3,tl4,tl5,tl6"
*.ue[*].mobility.constraintAreaMinX = 250m
*.ue[*].mobility.constraintAreaMaxX = 1750m
*.ue[*].mobility.constraintAreaMinY = 1000m
*.ue[*].mobility.constraintAreaMaxY = 2000m
*.ue[*].mobility.speed = uniform(8.33mps, 16.67mps)  # 30-60 Km/h
*.ue[*].mobility.initialRoadIndex = intuniform(0,3)
*.ue[*].mobility.enableTurns = true

############## UE applications ##################
*.ue[*].numApps = 2

*.ue[*].app[0].typename = "DeviceApp"
*.ue[*].app[0].localPort = 4500
*.ue[*].app[0].UALCMPAddress = "ualcmp"
*.ue[*].app[0].UALCMPPort = 1000
*.ue[*].app[0].appPackageSource = "ApplicationDescriptors/RealTimeVideoStreamingApp.json"

*.ue[*].app[1].typename = "RTVideoStreamingSender"
*.ue[*].app[1].deviceAppAddress = "ue["+string(ancestorIndex(1))+"]"
*.ue[*].app[1].deviceAppPort = 4500
*.ue[*].app[1].startTime = uniform(0.01s,90s)
*.ue[*].app[1].stopTime = 901s
*.ue[*].app[1].sessionDuration = uniform(30s,120s)
*.ue[*].app[1].periodBetweenSession = uniform(30s,90s)
*.ue[*].app[1].fileName = "./DataTraces/data_"+string(ancestorIndex(1) +${repetition})+".gdf"


############### Traffic Lights configuration ##################
*.tl*.bidirectional = true
*.tl*.trafficLightController.greenPeriod = 60s
*.tl*.trafficLightController.redPeriod = 60s

*.tl1.mobility.initialX = 400m
*.tl1.mobility.initialY = 1600m
*.tl1.mobility.initialHeading = 0deg
*.tl2.mobility.initialX = 850m
*.tl2.mobility.initialY = 1600m
*.tl2.mobility.initialHeading = 0deg
*.tl3.mobility.initialX = 1600m
*.tl3.mobility.initialY = 1600m
*.tl3.mobility.initialHeading = 0deg

*.tl4.mobility.initialX = 400m
*.tl4.mobility.initialY = 1600m
*.tl4.mobility.initialHeading = 90deg
*.tl4.trafficLightController.startState = 1
*.tl5.mobility.initialX = 850m
*.tl5.mobility.initialY = 1600m
*.tl5.mobility.initialHeading = 90deg
*.tl5.trafficLightController.startState = 1
*.tl6.mobility.initialX = 1600m
*.tl6.mobility.initialY = 1600m
*.tl6.mobility.initialHeading = 90deg
*.tl6.trafficLightController.startState = 1


############# Background traffic configuration ##################
*.gnb*.cellularNic.bgTrafficGenerator[0].enablePeriodicCqiUpdate = true
*.gnb*.cellularNic.bgTrafficGenerator[0].useProbabilisticCqi = false
*.gnb*.cellularNic.bgTrafficGenerator[0].numBgUes = 10
*.gnb*.cellularNic.bgTrafficGenerator[0].bgUE[*].trafficGeneratorType = "TrafficGeneratorCbr"
*.gnb*.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.startTimeUl = uniform(0s,0.05s)
*.gnb*.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.packetSizeUl = 1000B
*.gnb*.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.periodUl = 0.01s

*.bgCell[*].bgTrafficGenerator.enablePeriodicCqiUpdate = true
*.bgCell[*].bgTrafficGenerator.useProbabilisticCqi = false
*.bgCell[*].bgTrafficGenerator.numBgUes = 10
*.bgCell[*].bgTrafficGenerator.bgUE[*].trafficGeneratorType = "TrafficGeneratorCbr"
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.startTimeUl = uniform(0s,0.05s)
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.packetSizeUl = 100B
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.periodUl = 0.01s
#------------------------------------#



