[General]
image-path=../../../images
cmdenv-express-mode = true
cmdenv-autoflush = true

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = false
print-undisposed = true
sim-time-limit = 40s
warmup-period = 0s
repeat = 1
seed-set = ${repetition}

##########################################################
#            Output Format Results                       #
##########################################################
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${repetition}.vec
**.routingRecorder.enabled = false
**.scalar-recording = false
**.vector-recording = false


############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")


##########################################################
#              NR specific parameters                   #
##########################################################
**.fbPeriod = 40tti   # reports CQI every 40ms
**.amcType = "NRAmc"
**.pilotMode = "ROBUST_CQI"
**.targetBler = 0.01
**.blerShift = 5

# ----------------------------------------------------------------------------- #
# Config "RnisTest"
#
[Config RnisTest]
network = simu5g.simulations.NR.mec.rnisTest.RnisTest

#######################################################
#        CA and channel model configuration           #
#######################################################
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numBands = 25

*.gNodeB1.cellularNic.numCarriers = 1
*.gNodeB1.cellularNic.channelModel[0].componentCarrierIndex = 0
*.ue[*].cellularNic.numCarriers = 1
*.ue[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0


##########################################################
#                      Mobility                          #
##########################################################
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m

**.mobility.initFromDisplayString = false

*.gNodeB1.mobility.initialX = 140m
*.gNodeB1.mobility.initialY = 250m

*.numUes = 1
*.ue[0].mobility.initialX = 180m
*.ue[0].mobility.initialY = 50m
*.ue[0].mobility.typename = "LinearMobility"
*.ue[0].mobility.updateInterval = 0.05s
*.ue[0].mobility.initialMovementHeading = 90deg
*.ue[0].mobility.speed = 10mps

*.ue[*].masterId = 0
*.ue[*].macCellId = 0
*.ue[*].nrMasterId = 1
*.ue[*].nrMacCellId = 1

# tcp settings
**.tcp.typename = "Tcp"
**.tcp.advertisedWindow = 65535         # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.tcpAlgorithmClass = "TcpReno"    # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
**.tcp.sackSupport = true               # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)

##########################################################
#                    App Layer                           #
##########################################################

#########################_UE Side_#######################
*.ue[*].numApps = 2
*.ue[*].app[0].typename = "DeviceApp"
*.ue[*].app[0].localPort = 4500
*.ue[*].app[0].UALCMPAddress = "ualcmp"
*.ue[*].app[0].UALCMPPort = 1000
*.ue[*].app[0].appPackageSource = "ApplicationDescriptors/RnisTestApp.json"

*.ue[*].app[1].typename = "UeRnisTestApp"
*.ue[*].app[1].deviceAppAddress = "ue["+string(ancestorIndex(1))+"]"
*.ue[*].app[1].deviceAppPort = 4500
*.ue[*].app[1].startTime = 1s
*.ue[*].app[1].stopTime = 30s
#----------------------------------------


######################_MEC Host Side_#####################
# resources available
*.mecHost.maxMECApps = 100												#max ME Apps to instantiate
*.mecHost.maxRam = 32GB													#max KBytes of Ram Space
*.mecHost.maxDisk = 100TB												#max KBytes of Ram Space
*.mecHost.maxCpuSpeed = 400000											#max percentage of CPU

*.gNodeB*.mecHost = "mecHost"
*.mecHost.bsList = "gNodeB1"
*.mecHost.mecPlatformManager.mecOrchestrator = "mecOrchestrator"


#-------ETSI MEC Services:---------------
**.hasRNISupport = true
*.mecHost.mecPlatform.numMecServices = 1
*.mecHost.mecPlatform.mecService[0].typename = "RNIService"
*.mecHost.mecPlatform.mecService[0].localAddress = "mecHost.virtualisationInfrastructure"
*.mecHost.mecPlatform.mecService[0].localPort = 10020
*.mecHost.mecPlatform.mecService[0].requestServiceTime = 100us

*.mecHost.mecPlatform.serviceRegistry.localAddress = "mecHost.virtualisationInfrastructure"
*.mecHost.mecPlatform.serviceRegistry.localPort = 10021

#------- MEC orchestrator---------------
**.mecOrchestrator.mecHostList = "mecHost"


#