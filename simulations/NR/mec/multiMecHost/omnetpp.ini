[General]
image-path=../../../images
output-scalar-file-append = false
**.routingRecorder.enabled = false

############### Statistics ##################
output-scalar-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.vec
seed-set = ${repetition}
num-rngs = 3
**.sctp.**.scalar-recording = false  # remove annoying statistics from SCTP
**.sctp.**.vector-recording = false  # remove annoying statistics from SCTP
**.vector-recording = false

############### SCTP configuration ##################
**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
**.sctp.enableHeartbeats = false

############### General PHY parameters ##############
**.downlink_interference = true
**.uplink_interference = true
**.ueTxPower = 26dBm
**.eNodeBTxPower = 46dBm
**.targetBler = 0.01
**.blerShift = 5
**.fbPeriod = 40tti   # reports CQI every 40ms

############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")


# tcp settings
**.tcp.typename = "Tcp"
**.tcp.advertisedWindow = 65535         # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.tcpAlgorithmClass = "TcpReno"    # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
**.tcp.sackSupport = true               # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)


#------------------------------------#
# Config MultiMec
#
# General configuration for the for a multicell, multi-MEC system
# In this scenario, the MEC orchestrator instantiates three MEC apps on
# MEC Host 1 (because it has more CPU resources that MEC host 2. However,
# the MEC apps use the Location Service available on MEC Host 2 only.
#
[Config MultiMec]
sim-time-limit=40s
network = simu5g.simulations.NR.mec.multiMecHost.MultiMecHost

############# Floorplan parameters ################
**.mobility.constraintAreaMaxX = 1000m
**.mobility.constraintAreaMaxY = 750m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 250m
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false

############### CA configuration #################
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numerologyIndex = ${u=0}
*.carrierAggregation.componentCarrier[0].carrierFrequency = 2GHz
*.carrierAggregation.componentCarrier[0].numBands = ${numRbs=50}

*.gnb*.cellularNic.numCarriers = 1
*.gnb*.cellularNic.channelModel[0].componentCarrierIndex = 0
*.ue[*].cellularNic.numCarriers = 1
*.ue[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0

############### BS position #################
*.gnb1.mobility.initialX = 250m
*.gnb1.mobility.initialY = 500m
*.gnb2.mobility.initialX = 750m
*.gnb2.mobility.initialY = 500m

############### X2 configuration #################
*.gnb*.numX2Apps = 1                                        # one x2App per peering node
*.gnb*.x2App[*].server.localPort = 5000 + ancestorIndex(1)  # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
*.gnb1.x2App[0].client.connectAddress = "gnb2%x2ppp0"
*.gnb2.x2App[0].client.connectAddress = "gnb1%x2ppp0"

############## UE configuration ##################
*.numUe = ${numUEs=3}

# UEs associates to the best BS at the beginning of the simulation
*.ue[*].macCellId = 0
*.ue[*].masterId = 0
*.ue[*].nrMacCellId = 1
*.ue[*].nrMasterId = 1
**.dynamicCellAssociation = true
**.enableHandover = true

############ UEs position #################
*.ue[*].mobility.typename = "LinearMobility"
*.ue[0].mobility.initialX = 800m
*.ue[1].mobility.initialX = 875m
*.ue[2].mobility.initialX = 950m
*.ue[*].mobility.initialY = 600m
*.ue[*].mobility.speed = 13.89mps
*.ue[*].mobility.initialMovementHeading = 180deg

############# Client App configuration ################

#------------UEWarningAlertApp---------------
*.ue[*].numApps = 2
*.ue[*].app[0].typename = "DeviceApp"
*.ue[*].app[0].localPort = 4500
*.ue[*].app[0].UALCMPAddress = "ualcmp"
*.ue[*].app[0].UALCMPPort = 1000
*.ue[*].app[0].appPackageSource = "ApplicationDescriptors/WarningAlertApp.json"

*.ue[*].app[1].typename = "UEWarningAlertApp"
*.ue[*].app[1].deviceAppAddress = "ue["+string(ancestorIndex(1))+"]"
*.ue[*].app[1].deviceAppPort = 4500
*.ue[*].app[1].startTime = 1s
*.ue[*].app[1].stopTime = 35s

*.ue[*].app[1].positionX = 600m
*.ue[*].app[1].positionY = 600m
#------------------------------------#


############ MEC Configuration ############


# MEC Hosts
**.mecHost*.virtualisationInfrastructure.ipv4.forwarding = true
*.mecHost*.maxMECApps = 100					# max ME Apps to instantiate
*.mecHost*.maxRam = 32GB					# max KBytes of Ram
*.mecHost*.maxDisk = 100TB					# max KBytes of Disk Space
*.mecHost1.maxCpuSpeed = 400000		    	# max CPU
*.mecHost2.maxCpuSpeed = 500				# max CPU

*.mecHost*.bsList = "gnb1, gnb2"

# MEC Services
# MEC host 1 services configurations
*.mecHost1.mecPlatform.numMecServices = 0
*.mecHost1.mecPlatform.mecService[0].typename = "LocationService"
*.mecHost1.mecPlatform.mecService[0].localAddress = "mecHost1.virtualisationInfrastructure"
*.mecHost1.mecPlatform.mecService[0].localPort = 10020
*.mecHost1.mecPlatform.serviceRegistry.localAddress = "mecHost1.virtualisationInfrastructure"
*.mecHost1.mecPlatform.serviceRegistry.localPort = 10021


# MEC host 2 services configurations
*.mecHost2.mecPlatform.numMecServices = 1
*.mecHost2.mecPlatform.mecService[0].typename = "LocationService"
*.mecHost2.mecPlatform.mecService[0].localAddress = "mecHost2.virtualisationInfrastructure"
*.mecHost2.mecPlatform.mecService[0].localPort = 10020
*.mecHost2.mecPlatform.serviceRegistry.localAddress = "mecHost2.virtualisationInfrastructure"
*.mecHost2.mecPlatform.serviceRegistry.localPort = 10021

# random number generators configuration
*.mecHost2.mecPlatform.serviceRegistry.rng-0 = 0 # request service time
*.mecHost2.mecPlatform.serviceRegistry.rng-1 = 1 # subscription service time
*.mecHost2.mecPlatform.mecService[0].rng-0 = 0 # request service time
*.mecHost2.mecPlatform.mecService[0].rng-1 = 1 # subscription service time
*.mecHost2.mecPlatform.mecService[0].requestServiceTime = 20us
*.mecHost2.mecPlatform.mecService[0].subscriptionServiceTime = 11us

# MEC Orchestrator configuration
*.mecOrchestrator.mecHostList = "mecHost1, mecHost2"              # MEC hosts associated to the MEC system
*.mecOrchestrator.selectionPolicy = ${mecHostSelectionPolicy= "MecServiceBased", "MecHostBased", "AvailableResourcesBased"}
*.mecOrchestrator.mecHostIndex = 1
*.mecOrchestrator.mecApplicationPackageList = "WarningAlertApp"   # List of MEC app descriptors to be onboarded at
*.mecHost*.mecPlatformManager.mecOrchestrator = "mecOrchestrator" # the MECPM needs to know the MEC orchestrator


