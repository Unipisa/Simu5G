[General]
image-path=../../../images
cmdenv-express-mode = true
cmdenv-autoflush = true

##########################################################
#            Output Format Results                       #
##########################################################
num-rngs = 4
repeat = 30
seed-set = ${repetition}
output-scalar-file = ${resultdir}/${configname}/${iterationvars}_${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${iterationvars}_${repetition}.vec
**.routingRecorder.enabled = false
**.scalar-recording = false
**.vector-recording = true
#**.ue[*].*.vector-recording = true
#**.mecHost.*.vector-recording = true


##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = false
print-undisposed = true

sim-time-limit = 150s

#*.playgroundSizeX = 1100m
#*.playgroundSizeY = 800m
#*.playgroundSizeZ = 50m


############# Floorplan definition ##################
**.ue[*].mobility.constraintAreaMaxX = 1750m
**.ue[*].mobility.constraintAreaMaxY = 1683m
**.ue[*].mobility.constraintAreaMinX = 250m
**.ue[*].mobility.constraintAreaMinY = 317m
**.mobility.constraintAreaMaxX = 3000m
**.mobility.constraintAreaMaxY = 3000m
**.mobility.constraintAreaMinX = -250m
**.mobility.constraintAreaMinY = -250m
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false

############### Number of Resource Blocks ################
**.numBands = 100 # this value should be kept equal to the number of RBs
*.carrierAggregation.componentCarrier[0].numerologyIndex =0# ${u = 0}

## Schedulers
#**.mac.schedulingDisciplineDl = ${sched = "PF", "MAXCI"}
#**.mac.schedulingDisciplineUl = ${sched}

############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")


##########################################################
#              NR specific parameters                   #
##########################################################
*.gNodeB*.cellInfo.broadcastMessageInterval = 0.5s
**.fbPeriod = 40   # reports CQI every 40ms
**.amcType = "NRAmc"
**.pilotMode = "ROBUST_CQI" 
**.ueTxPower = 26
**.eNodeBTxPower = 46
**.targetBler = 0.01
**.blerShift = 5  



###############  network configuration #################
*.gnb1.mobility.initialX = 1000m
*.gnb1.mobility.initialY = 1000m

*.gnb2.mobility.initialX = 750m
*.gnb2.mobility.initialY = 567m

*.gnb3.mobility.initialX = 1500m
*.gnb3.mobility.initialY = 1000m

*.gnb4.mobility.initialX = 750m
*.gnb4.mobility.initialY = 1433m

*.gnb5.mobility.initialX = 1250m
*.gnb5.mobility.initialY = 567m

*.gnb6.mobility.initialX = 1250m
*.gnb6.mobility.initialY = 1433m

*.gnb7.mobility.initialX = 500m
*.gnb7.mobility.initialY = 1000m


**.ppp*.mtu = 1500B

# --- Background UEs in the central cell --- #

# the central gNBs have a number of background UEs

*.gnb*.cellularNic.bgTrafficGenerator[0].numBgUes = ${numBgUEs=5}

# position of background UEs in the cells
*.gnb1.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialX = uniform(750m,1250m)
*.gnb1.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialY = uniform(750m,1250m)

*.gnb2.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialX = uniform(500m,1000m)
*.gnb2.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialY = uniform(317m,817m)

*.gnb3.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialX = uniform(1250m,1750m)
*.gnb3.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialY = uniform(750m,1250m)

*.gnb4.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialX = uniform(500m,1000m)
*.gnb4.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialY = uniform(1183m,1683m)

*.gnb5.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialX = uniform(1000m,1500m)
*.gnb5.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialY = uniform(317m,817m)

*.gnb6.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialX = uniform(1000m,1500m)
*.gnb6.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialY = uniform(1183m,1683m)

*.gnb7.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialX = uniform(250m,750m)
*.gnb7.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialY = uniform(750m,1250m)


# --- Background UEs in the central cells --- #
*.gnb*.cellularNic.bgTrafficGenerator[0].enablePeriodicCqiUpdate = true  
*.gnb*.cellularNic.bgTrafficGenerator[0].useProbabilisticCqi = false# ${probCqi=false} 
*.gnb*.cellularNic.bgTrafficGenerator[0].bgUE[*].trafficGeneratorType = "TrafficGeneratorCbr"
*.gnb*.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.startTimeDl = uniform(0s,0.05s)
*.gnb*.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.packetSizeDl = 500B
*.gnb*.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.periodDl = 0.01s


# ---  BackGround cells --- #

*.numBgCells = 12 # ${numBgCells=12}

*.bgCell[*].bgTrafficGenerator.numBgUes = ${numBgUEs}

# position of background UEs in the background cells
**.bgCell[0].mobility.initialX = 1500.0m
**.bgCell[0].mobility.initialY = 133.98m
*.bgCell[0].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(1250m,1750m)
*.bgCell[0].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(-116m,384m)

**.bgCell[1].mobility.initialX = 1750.0m
**.bgCell[1].mobility.initialY = 1433.01m
*.bgCell[1].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(1500m,2000m)
*.bgCell[1].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(1183m,1683m)

**.bgCell[2].mobility.initialX = 1750.0m
**.bgCell[2].mobility.initialY = 566.99m
*.bgCell[2].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(1500m,2000m)
*.bgCell[2].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(317m, 817m)

**.bgCell[3].mobility.initialX = 1500.0m
**.bgCell[3].mobility.initialY = 1866.02m
*.bgCell[3].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(1250m,1750m)
*.bgCell[3].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(1616m,2116m)

**.bgCell[4].mobility.initialX = 2000.0m
**.bgCell[4].mobility.initialY = 1000.0m
*.bgCell[4].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(1750m,2250m)
*.bgCell[4].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(750m,1250m)

**.bgCell[5].mobility.initialX = 250.0m
**.bgCell[5].mobility.initialY = 566.99m
*.bgCell[5].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(0m,500m)
*.bgCell[5].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(317m,817m)

**.bgCell[6].mobility.initialX = 1000.0m
**.bgCell[6].mobility.initialY = 1866.02m
*.bgCell[6].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(750m,1250m)
*.bgCell[6].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(1616m,2116m)

**.bgCell[7].mobility.initialX = 500.0m
**.bgCell[7].mobility.initialY = 1866.02m
*.bgCell[7].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(250m,750m)
*.bgCell[7].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(1616m,2116m)

**.bgCell[8].mobility.initialX = 500.0m
**.bgCell[8].mobility.initialY = 133.98m
*.bgCell[8].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(250m,750m)
*.bgCell[8].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(-117m,383m)

**.bgCell[9].mobility.initialX = 0.0m
**.bgCell[9].mobility.initialY = 1000.0m
*.bgCell[9].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(-250m,250m)
*.bgCell[9].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(750m,1250m)

**.bgCell[10].mobility.initialX = 1000.0m
**.bgCell[10].mobility.initialY = 133.98m
*.bgCell[10].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(750m,1250m)
*.bgCell[10].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(-116m,384m)

**.bgCell[11].mobility.initialX = 250.0m
**.bgCell[11].mobility.initialY = 1433.01m
*.bgCell[11].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(0m,500m)
*.bgCell[11].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(1183m,1683m)


# --- Background UEs in the background cells --- #
*.bgCell[*].bgTrafficGenerator.enablePeriodicCqiUpdate = true
*.bgCell[*].bgTrafficGenerator.useProbabilisticCqi = false
*.bgCell[*].bgTrafficGenerator.bgUE[*].trafficGeneratorType = "TrafficGeneratorCbr"
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.startTimeDl = uniform(0s,0.05s)
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.packetSizeDl = 500B
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.periodDl = 0.01s


############### X2 configuration #################

######### Peering configuration ####################################################

*.gnb1.numX2Apps = 6    # one x2App 
*.gnb1.x2App[*].server.localPort = 6000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
*.gnb1.x2App[0].client.connectAddress = "gnb2%x2ppp0"
*.gnb1.x2App[1].client.connectAddress = "gnb3%x2ppp0"
*.gnb1.x2App[2].client.connectAddress = "gnb4%x2ppp0"
*.gnb1.x2App[3].client.connectAddress = "gnb5%x2ppp0"
*.gnb1.x2App[4].client.connectAddress = "gnb6%x2ppp0"
*.gnb1.x2App[5].client.connectAddress = "gnb7%x2ppp0"


*.gnb2.numX2Apps = 6    # one x2App 
*.gnb2.x2App[*].server.localPort = 6000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
*.gnb2.x2App[0].client.connectAddress = "gnb1%x2ppp0"
*.gnb2.x2App[1].client.connectAddress = "gnb3%x2ppp1"
*.gnb2.x2App[2].client.connectAddress = "gnb4%x2ppp1"
*.gnb2.x2App[3].client.connectAddress = "gnb5%x2ppp1"
*.gnb2.x2App[4].client.connectAddress = "gnb6%x2ppp1"
*.gnb2.x2App[5].client.connectAddress = "gnb7%x2ppp1"


*.gnb3.numX2Apps = 6    # one x2App 
*.gnb3.x2App[*].server.localPort = 6000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
*.gnb3.x2App[0].client.connectAddress = "gnb1%x2ppp1"
*.gnb3.x2App[1].client.connectAddress = "gnb2%x2ppp1"
*.gnb3.x2App[2].client.connectAddress = "gnb4%x2ppp2"
*.gnb3.x2App[3].client.connectAddress = "gnb5%x2ppp2"
*.gnb3.x2App[4].client.connectAddress = "gnb6%x2ppp2"
*.gnb3.x2App[5].client.connectAddress = "gnb7%x2ppp2"


*.gnb4.numX2Apps = 6    # one x2App 
*.gnb4.x2App[*].server.localPort = 6000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
*.gnb4.x2App[0].client.connectAddress = "gnb1%x2ppp2"
*.gnb4.x2App[1].client.connectAddress = "gnb2%x2ppp3"
*.gnb4.x2App[2].client.connectAddress = "gnb3%x2ppp2"
*.gnb4.x2App[3].client.connectAddress = "gnb5%x2ppp2"
*.gnb4.x2App[4].client.connectAddress = "gnb6%x2ppp3"
*.gnb4.x2App[5].client.connectAddress = "gnb7%x2ppp3"


*.gnb5.numX2Apps = 6    # one x2App 
*.gnb5.x2App[*].server.localPort = 6000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
*.gnb5.x2App[0].client.connectAddress = "gnb1%x2ppp3"
*.gnb5.x2App[1].client.connectAddress = "gnb2%x2ppp3"
*.gnb5.x2App[2].client.connectAddress = "gnb3%x2ppp3"
*.gnb5.x2App[3].client.connectAddress = "gnb4%x2ppp3"
*.gnb5.x2App[4].client.connectAddress = "gnb6%x2ppp4"
*.gnb5.x2App[5].client.connectAddress = "gnb7%x2ppp4"

*.gnb6.numX2Apps = 6    # one x2App 
*.gnb6.x2App[*].server.localPort = 6000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
*.gnb6.x2App[0].client.connectAddress = "gnb1%x2ppp4"
*.gnb6.x2App[1].client.connectAddress = "gnb2%x2ppp4"
*.gnb6.x2App[2].client.connectAddress = "gnb3%x2ppp4"
*.gnb6.x2App[3].client.connectAddress = "gnb4%x2ppp4"
*.gnb6.x2App[4].client.connectAddress = "gnb5%x2ppp3"
*.gnb6.x2App[5].client.connectAddress = "gnb7%x2ppp5"

*.gnb7.numX2Apps = 6    # one x2App 
*.gnb7.x2App[*].server.localPort = 6000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
*.gnb7.x2App[0].client.connectAddress = "gnb1%x2ppp5"
*.gnb7.x2App[1].client.connectAddress = "gnb2%x2ppp5"
*.gnb7.x2App[2].client.connectAddress = "gnb3%x2ppp5"
*.gnb7.x2App[3].client.connectAddress = "gnb4%x2ppp5"
*.gnb7.x2App[4].client.connectAddress = "gnb5%x2ppp4"
*.gnb7.x2App[5].client.connectAddress = "gnb6%x2ppp5"


**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
**.sctp.enableHeartbeats = false	


############### enable handover #################
**.enableHandover = true
**.dynamicCellAssociation = true  # at initialize the ue connects to the best cell (based on power)



# ----------------------------------------------------------------------------- #
# Config "SingleMec"
#
[Config SingleMec]
network = simu5g.simulations.NR.mec.FLaaS.old_QoE_estimation

#######################################################
#        CA and channel model configuration           # 
#######################################################
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numBands =  50 #${numBands=25}

*.*.cellularNic.LteChannelModelType = "NRChannelModel"
*.gnb*.cellularNic.numCarriers = 1
*.gnb*.cellularNic.channelModel[0].componentCarrierIndex = 0
*.ue[*].cellularNic.numCarriers = 1
*.ue[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0


##########################################################
#                      Mobility                          #			
##########################################################		
*.ue[*].mobility.initFromDisplayString = false
*.ue[*].mobility.typename = "LinearMobility"
*.ue[*].mobility.updateInterval = 0.05s
*.ue[*].mobility.speed = uniform(13.8mps, 41.7mps)

**.numUes = ${numUes= 5}#..20 step 5}


################### FLaaS Parameters #########
**.minLearners = ${numUes}
**.roundDuration = 120s #  uniform(60s, 90s);
**.modelAggregationDuration = 500ms
**.shortTraininagProbabilty = bernoulli(0.90, 3)
**.shortTrainingDuration = uniform(50s, 60s, 3)
**.longTrainingDuration = uniform(80s, 100s, 3)


**.ue[*].masterId = 0    
**.ue[*].macCellId = 0   
**.ue[*].nrMasterId = 1
**.ue[*].nrMacCellId = 1

# UE position
**.downlink_interference = true
**.upllink_interference = true   
**.bgCell_interference = true

# tcp settings
**.tcp.typename = "Tcp"
**.tcp.advertisedWindow = 65535         # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.tcpAlgorithmClass = "TcpReno"    # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
**.tcp.sackSupport = false               # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
#**.tcp.nagleEnabled = false


**.hasRNISupport = false
##########################################################
#                    App Layer                           #
##########################################################

#########################_Car Side_#######################

*.ue[*].numApps = 2

#*.ue[0].app[1].learnerDeployment = 1
*.ue[*].app[1].learnerDeployment = 0 #UE 0 

*.ue[*].app[0].typename = "DeviceApp"
*.ue[*].app[0].localPort = 4500
*.ue[*].app[0].UALCMPAddress = "ualcmp"
*.ue[*].app[0].UALCMPPort = 1000
*.ue[*].app[0].appPackageSource = "ApplicationDescriptors/FLLocalManager.json"

*.ue[*].app[1].typename = "UEFLApp"
*.ue[*].app[1].deviceAppAddress = "ue["+string(ancestorIndex(1))+"]"
*.ue[*].app[1].deviceAppPort = 4500
*.ue[*].app[1].startTime =  uniform(1s, 5s)										#when sending start warning alert app									#period to sending messages
*.ue[*].app[1].stopTime = 130s										#when sending stop MEC warning alert app

#----------------------------------------------------

######################_ME Host Side_#####################
# resources available
*.mecHost.maxMECApps = 100												#max ME Apps to instantiate
*.mecHost.maxRam = 32GB													#max KBytes of Ram Space 
*.mecHost.maxDisk = 100TB												#max KBytes of Ram Space 
*.mecHost.maxCpuSpeed = 400000											#max percentage of CPU
#----------------------------------------

*.mecHost.bsList = "gnb1"
*.mecHost.mecPlatformManager.mecOrchestrator = "mecOrchestrator"


#-------ETSI MEC Services:---------------
*.mecHost.mecPlatform.numMecServices = 1
*.mecHost.mecPlatform.mecService[0].typename = "FLServiceProvider"
*.mecHost.mecPlatform.mecService[0].localAddress = "mecHost.virtualisationInfrastructure"
*.mecHost.mecPlatform.mecService[0].localPort = 10020
*.mecHost.mecPlatform.mecService[0].flServicesList = "QoE_estimation.json"

*.mecHost.mecPlatform.mecService[0].rng-0 = 1 # request service time
*.mecHost.mecPlatform.mecService[0].rng-1 = 2 # subscription service time
*.mecHost.mecPlatform.mecService[0].requestServiceTime = 100us
*.mecHost.mecPlatform.mecService[0].subscriptionServiceTime = 11us

*.mecHost.mecPlatform.serviceRegistry.localAddress = "mecHost.virtualisationInfrastructure" #da cambiare!!
*.mecHost.mecPlatform.serviceRegistry.localPort = 10021

*.mecHost.mecPlatform.serviceRegistry.rng-0 = 1 # request service time
*.mecHost.mecPlatform.serviceRegistry.rng-1 = 2 # subscription service time

#------- MEC orchestrator---------------
**.mecOrchestrator.mecHostList = "mecHost"

