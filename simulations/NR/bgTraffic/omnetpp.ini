[General]
image-path=../../../images
output-scalar-file-append = false
**.routingRecorder.enabled = false

############### Statistics ##################
output-scalar-file = ${resultdir}/${configname}/${iterationvars}.sca
output-vector-file = ${resultdir}/${configname}/${iterationvars}.vec
seed-set = ${repetition}
**.vector-recording = false

############# Floorplan definition ##################
**.mobility.constraintAreaMaxX = 2500m
**.mobility.constraintAreaMaxY = 2500m
**.mobility.constraintAreaMinX = -500m
**.mobility.constraintAreaMinY = -500m
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false

############### General PHY parameters ##################
**.amcType = "NRAmc"
**.pilotMode = "AVG_CQI"
**.targetBler = 0.01
**.blerShift = 5
**.fbPeriod = 40tti
**.downlink_interference = false  # there are no real cells, so this can be disabled
**.uplink_interference = false    # there are no real cells, so this can be disabled
**.bgCell_interference = true     # enable UL/DL interference from bg cells

############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")


#------------------------------------#
# Config Standalone-withBackground
#
# Topology configuration for the exemplary scenario for NR Standalone deployment.
# The scenario include one gNB serving one UE and a number of background UEs. A
# configurable number of background cells is included too
#
[Config Standalone-withBackground]
network = simu5g.simulations.NR.networks.SingleCell_Standalone
description = "do not run this configuration! It is used as base configuration only"
sim-time-limit=3s

############### CA configuration ########################
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numBands = ${rbs=100}
*.carrierAggregation.componentCarrier[0].numerologyIndex = ${u=2}

############### e/gNodeB configuration #################
*.gnb.mobility.initialX = 1000m
*.gnb.mobility.initialY = 1000m

# the central gNB has a number of background UEs
*.gnb.cellularNic.bgTrafficGenerator[0].numBgUes = ${numBgUEs=15}



############## UE configuration ##################
*.numUe = 1

# connect the UE's NIC to the corresponding serving eNB
*.ue[0].macCellId = 0
*.ue[0].masterId = 0
*.ue[0].nrMacCellId = 1
*.ue[0].nrMasterId = 1

# UE position
*.ue[0].mobility.initialX = 1000m
*.ue[0].mobility.initialY = 1000m + ${dist=50m}



########## Background cells configuration #############
*.numBgCells = ${numBgCells=3,6,9}

# each background cell has the same number of background UEs as the central gNB
*.bgCell[*].bgTrafficGenerator.numBgUes = ${numBgUEs}

*.bgCell[0].mobility.initialX = 750m
*.bgCell[0].mobility.initialY = 567m
*.bgCell[1].mobility.initialX = 1500m
*.bgCell[1].mobility.initialY = 1000m
*.bgCell[2].mobility.initialX = 750m
*.bgCell[2].mobility.initialY = 1433m

*.bgCell[3].mobility.initialX = 1250m
*.bgCell[3].mobility.initialY = 567m
*.bgCell[4].mobility.initialX = 1250m
*.bgCell[4].mobility.initialY = 1433m
*.bgCell[5].mobility.initialX = 500m
*.bgCell[5].mobility.initialY = 1000m

*.bgCell[6].mobility.initialX = 500m
*.bgCell[6].mobility.initialY = 134m
*.bgCell[7].mobility.initialX = 2000m
*.bgCell[7].mobility.initialY = 1000m
*.bgCell[8].mobility.initialX = 500m
*.bgCell[8].mobility.initialY = 1866m

*.bgCell[*].bgScheduler.isNr = true
*.bgCell[*].bgScheduler.numBands = ${rbs}
*.bgCell[*].bgScheduler.numerologyIndex = ${u}


# position of background UEs in the central cell
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialX = uniform(750m,1250m)
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialY = uniform(750m,1250m)

# position of background UEs in the background cells
*.bgCell[0].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(500m,1000m)
*.bgCell[0].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(317m,817m)
*.bgCell[1].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(1250m,1750m)
*.bgCell[1].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(750m,1250m)
*.bgCell[2].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(500m,1000m)
*.bgCell[2].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(1183m,1933m)

*.bgCell[3].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(1000m,1500m)
*.bgCell[3].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(317m,817m)
*.bgCell[4].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(1000m,1500m)
*.bgCell[4].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(1183m,1933m)
*.bgCell[5].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(250m,750m)
*.bgCell[5].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(750m,1250m)

*.bgCell[6].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(250m,750m)
*.bgCell[6].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(-116m,384m)
*.bgCell[7].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(1750m,2250m)
*.bgCell[7].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(750m,1250m)
*.bgCell[8].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(250m,750m)
*.bgCell[8].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(1183m,1683m)

######### CQI and HARQ parameters for background UEs
include trafficGeneratorConfigs/config-u=2-rbs=100-numBgCells=3-numBkUEs=15-dist=50m-repetition=0.ini
#------------------------------------#



#------------------------------------#
# Config CBR-DL
#
# In this config, the server sends a CBR traffic to the UE
#
[Config CBR-DL]
extends = Standalone-withBackground
description = "CBR Downlink (standalone, with background traffic)"

################# Real traffic configuration ###################
*.ue[*].numApps = 1
*.server.numApps = 1

*.ue[*].app[*].typename = "CbrReceiver"
*.ue[*].app[0].localPort = 3000

*.server.app[*].typename = "CbrSender"
*.server.app[*].PacketSize = ${msgLen=1000B}
*.server.app[*].sampling_time = ${sndInt=0.01s}
*.server.app[*].destAddress = "ue[0]"
*.server.app[*].startTime = uniform(0s,0.05s)
*.server.app[*].finishTime = 19s


############# Background traffic configuration (DL only) #################

# --- Background UEs in the central cell --- #
*.gnb.cellularNic.bgTrafficGenerator[0].enablePeriodicCqiUpdate = true
*.gnb.cellularNic.bgTrafficGenerator[0].useProbabilisticCqi = ${probCqi=false}
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].trafficGeneratorType = "TrafficGeneratorCbr"
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.startTimeDl = uniform(0s,0.05s)
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.packetSizeDl = ${msgLen}
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.periodDl = ${sndInt}

# --- Background UEs in the background cells --- #
*.bgCell[*].bgTrafficGenerator.enablePeriodicCqiUpdate = true
*.bgCell[*].bgTrafficGenerator.useProbabilisticCqi = ${probCqi}
*.bgCell[*].bgTrafficGenerator.bgUE[*].trafficGeneratorType = "TrafficGeneratorCbr"
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.startTimeDl = uniform(0s,0.05s)
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.packetSizeDl = ${msgLen}
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.periodDl = ${sndInt}
#------------------------------------#



#------------------------------------#
# Config CBR-DL
#
# In this config, the UE sends a CBR traffic to the server
#
[Config CBR-UL]
extends=Standalone-withBackground
description = "CBR Uplink (standalone, with background traffic)"

################# Real traffic configuration ###################
*.ue[*].numApps = 1
*.server.numApps = 1

*.server.app[*].typename = "CbrReceiver"
*.server.app[*].localPort = 3000+ancestorIndex(0)

*.ue[*].app[*].typename = "CbrSender"
*.ue[*].app[*].destAddress = "server"
*.ue[*].app[*].PacketSize = ${msgLen=1000B}
*.ue[*].app[*].sampling_time = ${sndInt=0.01s}
*.ue[*].app[*].startTime = uniform(0s,0.05s)
*.ue[*].app[*].finishTime = 19s

############# Background traffic configuration (DL only) #################

# --- Background UEs in the central cell --- #
*.gnb.cellularNic.bgTrafficGenerator[0].enablePeriodicCqiUpdate = true
*.gnb.cellularNic.bgTrafficGenerator[0].useProbabilisticCqi = ${probCqi=false}
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].trafficGeneratorType = "TrafficGeneratorCbr"
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.startTimeUl = uniform(0s,0.05s)
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.packetSizeUl = ${msgLen}
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.periodUl = ${sndInt}

# --- Background UEs in the background cells --- #
*.bgCell[*].bgTrafficGenerator.enablePeriodicCqiUpdate = true
*.bgCell[*].bgTrafficGenerator.useProbabilisticCqi = ${probCqi}
*.bgCell[*].bgTrafficGenerator.bgUE[*].trafficGeneratorType = "TrafficGeneratorCbr"
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.startTimeUl = uniform(0s,0.05s)
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.packetSizeUl = ${msgLen}
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.periodUl = ${sndInt}
#------------------------------------#




#------------------------------------#
# Config CBR-DL_UL
#
# In this config, the server sends a CBR traffic to the UE, while the UE sends a
# CBR traffic to the server
#
[Config CBR-DL_UL]
extends=Standalone-withBackground
description = "CBR Downlink and Uplink (standalone, with background traffic)"

################# Real traffic configuration ###################
*.ue[*].numApps = 2
*.server.numApps = 2

# --- DL traffic --- #
*.ue[*].app[0].typename = "CbrReceiver"
*.ue[*].app[0].localPort = 3000

*.server.app[0].typename = "CbrSender"
*.server.app[0].PacketSize = ${msgLen=1000B}
*.server.app[0].sampling_time = ${sndInt=0.01s}
*.server.app[0].destAddress = "ue[0]"
*.server.app[0].destPort = 3000
*.server.app[0].localPort = 3000
*.server.app[0].startTime = uniform(0s,0.05s)
*.server.app[0].finishTime = 19s

# --- UL traffic --- #
*.server.app[1].typename = "CbrReceiver"
*.server.app[1].localPort = 3001

*.ue[*].app[1].typename = "CbrSender"
*.ue[*].app[1].destAddress = "server"
*.ue[*].app[1].destPort = 3001
*.ue[*].app[1].PacketSize = ${msgLen}
*.ue[*].app[1].sampling_time = ${sndInt}
*.ue[*].app[1].startTime = uniform(0s,0.05s)
*.ue[*].app[1].finishTime = 19s

############# Background traffic configuration (DL only) #################

# --- Background UEs in the central cell --- #
*.gnb.cellularNic.bgTrafficGenerator[0].enablePeriodicCqiUpdate = true
*.gnb.cellularNic.bgTrafficGenerator[0].useProbabilisticCqi = ${probCqi=false}
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].trafficGeneratorType = "TrafficGeneratorCbr"
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.startTimeDl = uniform(0s,0.05s)
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.startTimeUl = uniform(0s,0.05s)
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.packetSizeDl = ${msgLen}
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.packetSizeUl = ${msgLen}
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.periodDl = ${sndInt}
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.periodUl = ${sndInt}

# --- Background UEs in the background cells --- #
*.bgCell[*].bgTrafficGenerator.enablePeriodicCqiUpdate = true
*.bgCell[*].bgTrafficGenerator.useProbabilisticCqi = ${probCqi}
*.bgCell[*].bgTrafficGenerator.bgUE[*].trafficGeneratorType = "TrafficGeneratorCbr"
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.startTimeDl = uniform(0s,0.05s)
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.startTimeUl = uniform(0s,0.05s)
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.packetSizeDl = ${msgLen}
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.packetSizeUl = ${msgLen}
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.periodDl = ${sndInt}
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.periodUl = ${sndInt}
#------------------------------------#
