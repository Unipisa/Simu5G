[General]
image-path=../../../images
output-scalar-file-append = false
**.routingRecorder.enabled = false

############### Statistics ##################
output-scalar-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.vec
seed-set = ${repetition}
**.sctp.**.scalar-recording = false  # remove annoying statistics from SCTP
**.sctp.**.vector-recording = false  # remove annoying statistics from SCTP
**.vector-recording = true

############### SCTP configuration ##################
**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
**.sctp.enableHeartbeats = false

############### General PHY parameters ##############
**.downlink_interference = true
**.uplink_interference = true
**.ueTxPower = 26dBm
**.eNodeBTxPower = 46dBm
**.targetBler = 0.01
**.blerShift = 5
**.fbPeriod = 40tti   # reports CQI every 40ms

############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")


#------------------------------------#
# Config MultiCell
#
# General configuration for the for a multicell NR Standalone deployment
#
[Config MultiCell]
network = simu5g.simulations.NR.networks.MultiCell_Standalone
sim-time-limit=20s
description = "Base configuration, do not run this config!"

############# Floorplan parameters ################
**.mobility.constraintAreaMaxX = 1000m
**.mobility.constraintAreaMaxY = 750m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 250m
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false

############### CA configuration #################
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numerologyIndex = ${u=0}
*.carrierAggregation.componentCarrier[0].carrierFrequency = 2GHz
*.carrierAggregation.componentCarrier[0].numBands = ${numRbs=50}

*.gnb*.cellularNic.numCarriers = 1
*.gnb*.cellularNic.channelModel[0].componentCarrierIndex = 0
*.ue[*].cellularNic.numCarriers = 1
*.ue[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0

############### BS position #################
*.gnb1.mobility.initialX = 250m
*.gnb1.mobility.initialY = 500m
*.gnb2.mobility.initialX = 750m
*.gnb2.mobility.initialY = 500m

############### X2 configuration #################
*.gnb*.numX2Apps = 1                                        # one x2App per peering node
*.gnb*.x2App[*].server.localPort = 5000 + ancestorIndex(1)  # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
*.gnb1.x2App[0].client.connectAddress = "gnb2%x2ppp0"
*.gnb2.x2App[0].client.connectAddress = "gnb1%x2ppp0"

############## UE configuration ##################
*.numUe = ${numUEs=1,10,30}

# UEs associates to the best BS at the beginning of the simulation
*.ue[*].macCellId = 0
*.ue[*].masterId = 0
*.ue[*].nrMacCellId = 1
*.ue[*].nrMasterId = 1
**.dynamicCellAssociation = true
**.enableHandover = true

############ UEs position #################
*.ue[*].mobility.typename = "LinearMobility"
*.ue[*].mobility.initialX = uniform(0m,1000m)
*.ue[*].mobility.initialY = uniform(250m,750m)
*.ue[*].mobility.speed = uniform(3mps,13.89mps)
#------------------------------------#



#------------------------------------#
# Config CBR-DL
#
# Configuration with CBR DL traffic from a remote server to the UEs
#
[Config CBR-DL]
extends = MultiCell
description = "CBR DL traffic from remote server to UEs"

# one UDP application for each user
*.ue[*].numApps = 1

# the amount of UDP applications on server should be equal to (numUEs)*(ue[*].numApps)
*.server.numApps = ${numUEs}

#============= Application Setup =============
*.ue[*].app[*].typename = "CbrReceiver"
*.ue[*].app[*].localPort = 3000

*.server.app[*].typename = "CbrSender"
*.server.app[*].PacketSize = 100B
*.server.app[*].sampling_time = 0.02s
*.server.app[*].destAddress = "ue[" + string(ancestorIndex(0)) + "]"
*.server.app[*].destPort = 3000
*.server.app[*].localPort = 3088+ancestorIndex(0)
*.server.app[*].startTime = uniform(0s,0.02s)
*.server.app[*].finishTime = uniform(19.9s,19.92s)

#------------------------------------#



#------------------------------------#
# Config CBR-UL
#
# Configuration with CBR UL traffic from the UEs to a remote server
#
[Config CBR-UL]
extends=MultiCell
description = "CBR UL traffic from UEs to remote server"

# one UDP application for each user
*.ue[*].numApps = 1

# the amount of UDP applications on server should be equal to (numUEs)*(ue[*].numApps)
*.server.numApps = ${numUEs}

#============= Application Setup =============
*.server.app[*].typename = "CbrReceiver"
*.server.app[*].localPort = 3000 + ancestorIndex(0)

*.ue[*].app[*].typename = "CbrSender"
*.ue[*].app[*].PacketSize = 100B
*.ue[*].app[*].sampling_time = 0.02s
*.ue[*].app[*].destAddress = "server"
*.ue[*].app[*].destPort = 3000 + ancestorIndex(1)
*.ue[*].app[*].localPort = 3088+ancestorIndex(0)
*.ue[*].app[*].startTime = uniform(0s,0.02s)
*.ue[*].app[*].finishTime = uniform(19.9s,19.92s)
#------------------------------------#


