[General]
scheduler-class = "inet::RealTimeScheduler"
cmdenv-express-mode = true
image-path=../../../images
output-scalar-file-append = false
sim-time-limit = 70s

**.routingRecorder.enabled = false
**.networkConfiguratorModule = ""
**.fcsMode = "computed"
**.crcMode = "computed"

############### Statistics ##################
**.scalar-recording = true
**.vector-recording = false
output-scalar-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.vec
seed-set = ${repetition}


############# Floorplan definition ##################
**.mobility.constraintAreaMaxX = 2500m
**.mobility.constraintAreaMaxY = 2500m
**.mobility.constraintAreaMinX = -500m
**.mobility.constraintAreaMinY = -500m
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false

############### Phy layer parameters ################
**.amcType = "NRAmc"
**.pilotMode = "AVG_CQI"
**.targetBler = 0.01
**.blerShift = 5
**.fbPeriod = 40tti

############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")




# MultiCellBackground configuration
#
# The central cell is surrounded by a configurable number of background cells.
# Each surrounding cell has a number of bgUEs
[Config MultiCellBackground]
network = simu5g.emulation.extclientserver_bgTraffic.ExtClientServer_bgCells

########### Central gNodeB configuration ##############
*.gnb.mobility.initialX = 1000m
*.gnb.mobility.initialY = 1000m

# the central gNB has a number of background UEs
*.gnb.cellularNic.bgTrafficGenerator[0].numBgUes = ${numBgUEs=15}


########## Background cells configuration #############
*.numBgCells = ${numBgCells=3,6,9}

# each background cell has the same number of background UEs as the central gNB
*.bgCell[*].bgTrafficGenerator.numBgUes = ${numBgUEs}

*.bgCell[0].mobility.initialX = 750m
*.bgCell[0].mobility.initialY = 567m
*.bgCell[1].mobility.initialX = 1500m
*.bgCell[1].mobility.initialY = 1000m
*.bgCell[2].mobility.initialX = 750m
*.bgCell[2].mobility.initialY = 1433m

*.bgCell[3].mobility.initialX = 1250m
*.bgCell[3].mobility.initialY = 567m
*.bgCell[4].mobility.initialX = 1250m
*.bgCell[4].mobility.initialY = 1433m
*.bgCell[5].mobility.initialX = 500m
*.bgCell[5].mobility.initialY = 1000m

*.bgCell[6].mobility.initialX = 500m
*.bgCell[6].mobility.initialY = 134m
*.bgCell[7].mobility.initialX = 2000m
*.bgCell[7].mobility.initialY = 1000m
*.bgCell[8].mobility.initialX = 500m
*.bgCell[8].mobility.initialY = 1866m

############## ue configuration ##################
# connect the ue's NIC to the corresponding serving gnb
*.ue*.macCellId = 0
*.ue*.masterId = 0
*.ue*.nrMacCellId = 1
*.ue*.nrMasterId = 1

# ue position
*.ue*.mobility.typename = "StationaryMobility"
*.ue*.mobility.initialX = 1000m
*.ue*.mobility.initialY = 1000m + ${dist=50m}

############### CA configuration ########################
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].carrierFrequency = 2GHz
*.carrierAggregation.componentCarrier[0].numBands = ${rbs=100}
*.carrierAggregation.componentCarrier[0].numerologyIndex = ${u=2}

*.gnb.cellularNic.numCarriers = 1
*.gnb.cellularNic.channelModel[0].componentCarrierIndex = 0
*.ue.cellularNic.numNRCarriers = 1
*.ue.cellularNic.nrChannelModel[0].componentCarrierIndex = 0

*.bgCell[*].bgScheduler.isNr = true
*.bgCell[*].bgScheduler.numBands = ${rbs}
*.bgCell[*].bgScheduler.carrierFrequency = 2GHz
*.bgCell[*].bgScheduler.numerologyIndex = ${u}

**.downlink_interference = false  # there are no real cells, so this can be disabled
**.uplink_interference = false    # there are no real cells, so this can be disabled
**.bgCell_interference = true     # enable UL/DL interference from bg cells


############# Background traffic configuration #################

# --- Background UEs in the central cell --- #
*.gnb.cellularNic.bgTrafficGenerator[0].enablePeriodicCqiUpdate = true
*.gnb.cellularNic.bgTrafficGenerator[0].useProbabilisticCqi = ${probCqi=false}
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].trafficGeneratorType = "TrafficGeneratorCbr"
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.startTimeDl = uniform(0s,0.5s)
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.startTimeUl = uniform(0s,0.5s)
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.packetSizeDl = ${msgLen=1000B}
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.packetSizeUl = ${msgLen}
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.periodDl = ${sndInt=0.04s}
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].generator.periodUl = ${sndInt}

# position of background UEs in the central cell
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialX = uniform(750m,1250m)
*.gnb.cellularNic.bgTrafficGenerator[0].bgUE[*].mobility.initialY = uniform(750m,1250m)

# --- Background UEs in the background cells --- #
*.bgCell[*].bgTrafficGenerator.enablePeriodicCqiUpdate = true
*.bgCell[*].bgTrafficGenerator.useProbabilisticCqi = ${probCqi}
*.bgCell[*].bgTrafficGenerator.bgUE[*].trafficGeneratorType = "TrafficGeneratorCbr"
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.startTimeDl = uniform(0s,0.5s)
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.startTimeUl = uniform(0s,0.5s)
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.packetSizeDl = ${msgLen}
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.packetSizeUl = ${msgLen}
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.periodDl = ${sndInt}
*.bgCell[*].bgTrafficGenerator.bgUE[*].generator.periodUl = ${sndInt}

# position of background UEs in the background cells
*.bgCell[0].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(500m,1000m)
*.bgCell[0].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(317m,817m)
*.bgCell[1].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(1250m,1750m)
*.bgCell[1].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(750m,1250m)
*.bgCell[2].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(500m,1000m)
*.bgCell[2].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(1183m,1933m)

*.bgCell[3].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(1000m,1500m)
*.bgCell[3].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(317m,817m)
*.bgCell[4].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(1000m,1500m)
*.bgCell[4].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(1183m,1933m)
*.bgCell[5].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(250m,750m)
*.bgCell[5].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(750m,1250m)

*.bgCell[6].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(250m,750m)
*.bgCell[6].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(-116m,384m)
*.bgCell[7].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(1750m,2250m)
*.bgCell[7].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(750m,1250m)
*.bgCell[8].bgTrafficGenerator.bgUE[*].mobility.initialX = uniform(250m,750m)
*.bgCell[8].bgTrafficGenerator.bgUE[*].mobility.initialY = uniform(1183m,1683m)

# include data for assigning cqi and rtxRate (useful when randomCqi==true only)
include trafficGeneratorConfigs/config-u=2-rbs=100-numBgCells=3-numBkUEs=15-dist=50m-repetition=0.ini

#
# This configuration uses sockets to exchange packets with the real world
#
[Config ExtClientServer-bgTraffic]
extends=MultiCellBackground

############## Routing configuration ##############
# configure routing tables of each network element. Each of them must include a route to the (real) client
*.router.ipv4.routingTable.routingFile = "routing/router.mrt"
*.upf.ipv4.routingTable.routingFile = "routing/upf.mrt"
*.gnb.ipv4.routingTable.routingFile = "routing/gnb.mrt"
*.ue.ipv4.routingTable.routingFile = "routing/ue.mrt"


############## Ext Interface configuration ##############
# equip the router with an External Ethernet interface
*.router.numEthInterfaces = 1
*.router.eth[0].typename = "ExtLowerEthernetInterface"
*.router.eth[0].device = "sim-veth1"

*.ue.numEthInterfaces = 1
*.ue.eth[0].typename = "ExtLowerEthernetInterface"
*.ue.eth[0].device = "sim-veth2"
*.ue.extHostAddress = "192.168.3.2"
*.ue.ipv4.forwarding = true

